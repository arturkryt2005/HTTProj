@page "/products"
@using HTTProj.Application
@inject IHttpClientFactory HttpClientFactory

@code {
    private List<Product>? Products;
    private List<Categories>? Categories;
    private bool isAscendingPrice = true;

    protected override async Task OnInitializedAsync()
    {
        var client = HttpClientFactory.CreateClient("ApiClient");

        // Получаем продукты
        Products = await client.GetFromJsonAsync<List<Product>>("api/product");

        // Получаем категории
        Categories = await client.GetFromJsonAsync<List<Categories>>("api/categories");
    }

    private void SortByPrice()
    {
        if (Products != null)
        {
            if (isAscendingPrice)
            {
                Products = Products.OrderBy(p => p.Price).ToList();
            }
            else
            {
                Products = Products.OrderByDescending(p => p.Price).ToList();
            }
            isAscendingPrice = !isAscendingPrice;
        }
    }

    private string GetCategoryName(int categoryId)
    {
        var category = Categories?.FirstOrDefault(c => c.Id == categoryId);
        return category?.Name ?? "Unknown";
    }
}

<h3 class="page-title">Product List</h3>

@if (Products == null || Categories == null)
{
    <p class="loading-message"><em>Loading...</em></p>
}
else
{
    <table class="product-table">
        <thead>
            <tr>
                <th>Name</th>
                <th>
                    Price
                    <button class="sort-button" @onclick="SortByPrice">
                        Sort
                    </button>
                </th>
                <th>Category</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in Products)
            {
                <tr>
                    <td>@product.Name</td>
                    <td>@product.Price</td>
                    <td>@GetCategoryName(product.CategoryId)</td>
                </tr>
            }
        </tbody>
    </table>
}
